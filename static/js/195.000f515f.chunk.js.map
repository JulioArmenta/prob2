{"version":3,"file":"static/js/195.000f515f.chunk.js","mappings":"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","sources":["actions/providers.js","views/catalogs/providers/ProviderForm.js","views/catalogs/providers/ProvidersGrid.js","views/catalogs/providers/Providers.js","../node_modules/@mui/icons-material/LocationOn.js"],"sourcesContent":["import axios from 'axios'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllProviders = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/providers`)\r\n      .then((response) => {\r\n        console.log(response)\r\n\r\n        dispatch(getProviders(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addProviderAPI = (provider) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/providers`, provider)\r\n      .then((response) => {\r\n        dispatch(createProvider(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateProviderAPI = (provider, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/providers/${id}`, provider)\r\n      .then((response) => {\r\n        dispatch(updateProvider(provider))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const createProvider = (provider) => ({\r\n  type: types.createProvider,\r\n  payload: provider,\r\n})\r\n\r\nexport const updateProvider = (provider) => ({\r\n  type: types.updateProvider,\r\n  payload: provider,\r\n})\r\n\r\nexport const getProviders = (providers) => ({\r\n  type: types.getProviders,\r\n  payload: providers,\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useForm as customForm, Form } from 'src/layout/useForm'\r\nimport Controls from 'src/views/utils/controls/Controls'\r\n// import { FormRadioGroup } from 'src/views/utils/controls/FormRadioGroup'\r\n\r\nconst genderItems = [\r\n  { id: 'male', title: 'Male' },\r\n  { id: 'female', title: 'Female' },\r\n  { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  name: '',\r\n  contact_name: '',\r\n  email: '',\r\n  address: '',\r\n  phone: '',\r\n}\r\n\r\nexport const ProviderForm = (props) => {\r\n  const { recordForEdit, addOrEdit, cancelForm } = props\r\n\r\n  const { values, setValues, handleInputChange, resetForm } = customForm(initialFValues)\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null) {\r\n      console.log(recordForEdit)\r\n      if (recordForEdit.id) setValues({ ...recordForEdit })\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    addOrEdit(values, resetForm)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    resetForm()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    cancelForm(resetForm)\r\n  }\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Controls.FormInput\r\n            label=\"Nombre\"\r\n            name=\"name\"\r\n            value={values.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Nombre Contacto\"\r\n            name=\"contact_name\"\r\n            value={values.contact_name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Correo electronico\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            validators={['isEmail']}\r\n            errorMessages={['Ingresar email válido']}\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Dirección\"\r\n            name=\"address\"\r\n            value={values.address}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Teléfono\"\r\n            name=\"phone\"\r\n            value={values.phone}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n\r\n          {/* <Controls.FormRadioGroup\r\n            name=\"gender\"\r\n            label=\"Género\"\r\n            value={values.gender}\r\n            onChange={handleInputChange}\r\n            items={genderItems}\r\n          /> */}\r\n        </Grid>\r\n        <Grid item xs={12} style={{ textAlign: 'right', paddingTop: 5 }}>\r\n          <Controls.FormButton\r\n            variant=\"text\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            text=\"Cancelar\"\r\n            onClick={handleCancel}\r\n          />\r\n          <Controls.FormButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            text=\"Guardar\"\r\n          />\r\n          {/* <Controls.FormButton\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            text=\"Limpiar\"\r\n            onClick={handleReset}\r\n          /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport MaterialTable, { MTableAction, MTableBodyRow } from 'material-table'\r\n\r\nimport Edit from '@material-ui/icons/Edit'\r\n\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone'\r\nimport EmailIcon from '@mui/icons-material/Email'\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt'\r\n\r\nimport { Spinner } from 'src/views/utils/Spinner'\r\nimport { PaperHeader } from 'src/views/utils/PaperHeader'\r\nimport { GridTitle } from 'src/views/utils/material-table/GridTitle'\r\nimport { GridAddButton } from 'src/views/utils/material-table/GridAddButton'\r\nimport { localizationConfig } from '../../utils/material-table/Localization'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { tableIcons } from 'src/views/utils/material-table/GridIcons'\r\nimport { headerStyle } from 'src/views/utils/material-table/GridHeaderStyle'\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn'\r\nimport { getAllProviders, updateProviderAPI } from 'src/actions/providers'\r\nimport ActionsTemplate from 'src/views/utils/material-table/GridActions'\r\nimport components from 'src/views/utils/material-table/GridComponents'\r\nimport rowStyle from 'src/views/utils/material-table/GridRowStyle'\r\n\r\nconst ProvidesGrid = (props) => {\r\n  const columnas = [\r\n    {\r\n      title: <GridTitle Icon={PersonIcon} title=\"Nombre\" />,\r\n      field: 'name',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={PersonAddAltIcon} title=\"Nombre Contacto\" />,\r\n      field: 'contact_name',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={EmailIcon} title=\"Correo Electronico\" />,\r\n      field: 'email',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={LocationOnIcon} title=\"Dirección\" />,\r\n      field: 'address',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={LocalPhoneIcon} title=\"Telefono\" />,\r\n      field: 'phone',\r\n    },\r\n\r\n    {\r\n      title: <GridTitle Icon={CalendarTodayIcon} title=\"Fecha de registro\" />,\r\n      field: 'createdAt',\r\n      type: 'date',\r\n      defaultSort: 'desc',\r\n      render: (rowData) => moment(rowData.createdAt).format('DD/MM/YYYY'),\r\n    },\r\n  ]\r\n\r\n  const { setOpenPopup, setRecordForEdit } = props\r\n\r\n  const dispatch = useDispatch()\r\n  const providers = useSelector((state) => state.providers)\r\n\r\n  useEffect(() => {\r\n    if (providers.length === 0) {\r\n      dispatch(getAllProviders())\r\n    }\r\n  }, [])\r\n\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        {providers != null ? (\r\n          <>\r\n            <PaperHeader title=\"Proveedores\" />\r\n            <MaterialTable\r\n              localization={localizationConfig}\r\n              icons={tableIcons}\r\n              columns={columnas}\r\n              data={providers}\r\n              actions={ActionsTemplate(\r\n                'Editar Proveedor',\r\n                updateProviderAPI,\r\n                setOpenPopup,\r\n                setRecordForEdit,\r\n                dispatch,\r\n              )}\r\n              components={components(setOpenPopup, setRecordForEdit)}\r\n              options={{\r\n                search: true,\r\n                draggable: false,\r\n                showTitle: false,\r\n                thirdSortClick: false,\r\n                searchFieldAlignment: 'left',\r\n                actionsColumnIndex: -1,\r\n                searchFieldVariant: 'outlined',\r\n                searchFieldStyle: { margin: 15 },\r\n                headerStyle: headerStyle,\r\n                rowStyle: rowStyle,\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </>\r\n    ),\r\n    [providers],\r\n  )\r\n}\r\n\r\nexport default ProvidesGrid\r\n","import { Paper, makeStyles } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addProviderAPI, updateProviderAPI } from 'src/actions/providers'\r\nimport { PopupForm } from 'src/views/utils/controls/PopupForm'\r\nimport { ProviderForm } from './ProviderForm'\r\nimport ProvidersGrid from './ProvidersGrid'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(3),\r\n  },\r\n  searchInput: {\r\n    width: '75%',\r\n  },\r\n}))\r\n\r\nconst Providers = () => {\r\n  const dispatch = useDispatch()\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const classes = useStyles()\r\n\r\n  const addOrEdit = (provider, resetForm) => {\r\n    if (provider.id === 0) {\r\n      delete provider.id\r\n      dispatch(addProviderAPI(provider))\r\n    } else {\r\n      delete provider.tableData\r\n      dispatch(updateProviderAPI(provider, provider.id))\r\n    }\r\n\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  const cancelForm = (resetForm) => {\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <ProvidersGrid setOpenPopup={setOpenPopup} setRecordForEdit={setRecordForEdit} />\r\n      </Paper>\r\n      <PopupForm\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n        setRecordForEdit={setRecordForEdit}\r\n        title=\"Proveedor\"\r\n      >\r\n        <ProviderForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} cancelForm={cancelForm} />\r\n      </PopupForm>\r\n    </>\r\n  )\r\n}\r\nexport default Providers\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\n\nexports.default = _default;"],"names":["getAllProviders","dispatch","axios","process","then","response","console","log","getProviders","data","catch","error","addProviderAPI","provider","createProvider","updateProviderAPI","id","updateProvider","type","types","payload","providers","initialFValues","name","contact_name","email","address","phone","ProviderForm","props","recordForEdit","addOrEdit","cancelForm","customForm","values","setValues","handleInputChange","resetForm","useEffect","onSubmit","e","preventDefault","Grid","container","item","xs","Controls","label","value","onChange","required","validators","errorMessages","style","textAlign","paddingTop","variant","color","size","text","onClick","columnas","title","GridTitle","Icon","PersonIcon","field","PersonAddAltIcon","EmailIcon","LocationOnIcon","LocalPhoneIcon","CalendarTodayIcon","defaultSort","render","rowData","moment","createdAt","format","setOpenPopup","setRecordForEdit","useDispatch","useSelector","state","length","useMemo","PaperHeader","localization","localizationConfig","icons","tableIcons","columns","actions","ActionsTemplate","components","options","search","draggable","showTitle","thirdSortClick","searchFieldAlignment","actionsColumnIndex","searchFieldVariant","searchFieldStyle","margin","headerStyle","rowStyle","Spinner","useStyles","makeStyles","theme","pageContent","spacing","padding","searchInput","width","useState","openPopup","Paper","ProvidersGrid","PopupForm","tableData","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}