{"version":3,"file":"static/js/818.51b5a599.chunk.js","mappings":"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","sources":["actions/branches.js","actions/customers.js","layout/useForm.js","actions/appoiments.js","views/catalogs/calendar/AppointmentToolTip.js","views/catalogs/calendar/AppointmentDialog.js","views/catalogs/calendar/AppointmentFormC.js","views/catalogs/calendar/Calendar.js","views/utils/PaperHeader.js","views/utils/Spinner.js"],"sourcesContent":["import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllBranches = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/branches`)\r\n      .then((response) => {\r\n        console.log(response)\r\n\r\n        dispatch(getBranches(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addBranchAPI = (branch) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/branches`, branch)\r\n      .then((response) => {\r\n        dispatch(createBranch(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateBranchAPI = (branch, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/branches/${id}`, branch)\r\n      .then((response) => {\r\n        dispatch(updateBranch(branch))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const createBranch = (branch) => ({\r\n  type: types.createBranch,\r\n  payload: branch,\r\n})\r\n\r\nexport const updateBranch = (branch) => ({\r\n  type: types.updateBranch,\r\n  payload: branch,\r\n})\r\n\r\nexport const getBranches = (branches) => ({\r\n  type: types.getBranches,\r\n  payload: branches,\r\n})\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllCustomers = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/customers`)\r\n      .then((response) => {\r\n        console.log(response)\r\n\r\n        dispatch(getCustomers(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addCustomerAPI = (customer) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/customers`, customer)\r\n      .then((response) => {\r\n        dispatch(createCustomer(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateCustomerAPI = (customer, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/customers/${id}`, customer)\r\n      .then((response) => {\r\n        dispatch(updateCustomer(customer))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\n// export const changeStatusCustomerAPI = (customer, id) => {\r\n//   return async (dispatch) => {\r\n//     await axios\r\n//       .put(`${process.env.REACT_APP_API_URL_BASE}/api/customers/${id}`, {\r\n//         status: !customer.status,\r\n//       })\r\n//       .then((response) => {\r\n//         dispatch(updateCustomer({ status: !customer.status, id: customer.id }))\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error)\r\n//       })\r\n//   }\r\n// }\r\n\r\nexport const createCustomer = (customer) => ({\r\n  type: types.createCustomer,\r\n  payload: customer,\r\n})\r\n\r\nexport const updateCustomer = (customer) => ({\r\n  type: types.updateCustomer,\r\n  payload: customer,\r\n})\r\n\r\n// export const changeStatusCustomer = (customer) => ({\r\n//   type: types.changeStatusCustomer,\r\n//   payload: customer,\r\n// })\r\n\r\nexport const getCustomers = (customers) => ({\r\n  type: types.getCustomers,\r\n  payload: customers,\r\n})\r\n","import { makeStyles } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\n\r\nexport const useForm = (initialFValues, validateOnChange = false, validate) => {\r\n  const [values, setValues] = useState(initialFValues)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    })\r\n    if (validateOnChange) validate({ [name]: value })\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setValues(initialFValues)\r\n    setErrors({})\r\n  }\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    handleInputChange,\r\n    resetForm,\r\n    errors,\r\n    setErrors,\r\n  }\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '100%',\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      // margin: theme.spacing(1),\r\n      // padding: theme.spacing(1),\r\n    },\r\n  },\r\n}))\r\n\r\nexport function Form(props) {\r\n  const classes = useStyles()\r\n  const { children, ...other } = props\r\n  return (\r\n    <ValidatorForm className={classes.root} {...other}>\r\n      {children}\r\n    </ValidatorForm>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllAppoiments = () => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/appoiments`)\r\n      .then((response) => {\r\n        console.log(response)\r\n        // console.log(moment.now())\r\n        // console.log(Date())\r\n        const appoiments = response.data.map((e) => {\r\n          // console.log(moment(e.appoiment_date).toString())\r\n          const fecha = moment(e.appoiment_date).add(e.duration, 'minutes')\r\n          // .format('MMMM Do YYYY, h:mm:ss a')\r\n          // const fecha = new Date(e.appoiment_date)\r\n          // fecha.setMinutes(fecha.getMinutes() + e.duration)\r\n          return {\r\n            startDate: new Date(e.appoiment_date),\r\n            endDate: new Date(fecha),\r\n            title: `${e.customer.name} ${e.customer.lastname}`,\r\n            status: e.status,\r\n            phone: e.customer.phone,\r\n            email: e.customer.email,\r\n            description: e.description,\r\n            customerId: e.customer,\r\n            id: e.id,\r\n            branchId: e.branchId,\r\n          }\r\n        })\r\n        dispatch(getAppoiments(appoiments))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addAppointmentAPI = (appointment) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/appoiments`, appointment)\r\n      .then((response) => {\r\n        dispatch(getAllAppoiments())\r\n        // console.log(response.data)\r\n        // const e = response.data\r\n\r\n        // const fecha = moment(e.appoiment_date).add(e.duration, 'minutes')\r\n        // .format('MMMM Do YYYY, h:mm:ss a')\r\n        // const fecha = new Date(e.appoiment_date)\r\n        // fecha.setMinutes(fecha.getMinutes() + e.duration)\r\n        // dispatch(\r\n        //   createAppointment({\r\n        //     startDate: new Date(e.appoiment_date),\r\n        //     endDate: new Date(fecha),\r\n        //     title: `${e.customer.name} ${e.customer.lastname}`,\r\n        //     status: e.status,\r\n        //     phone: e.customer.phone,\r\n        //     email: e.customer.email,\r\n        //     description: e.description,\r\n        //     customer: {\r\n        //       label: `${e.customer.name} ${e.customer.lastname} - ${e.customer.phone}`,\r\n        //       id: e.customerId,\r\n        //     },\r\n        //     id: e.id,\r\n        //     branchId: e.branchId,\r\n        //   }),\r\n        // )\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateAppointmentAPI = (appointment, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/appoiments/${id}`, appointment)\r\n      .then((response) => {\r\n        dispatch(getAllAppoiments())\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\nexport const getAppoiments = (appoiments) => ({\r\n  type: types.getAppoiments,\r\n  payload: appoiments,\r\n})\r\n\r\nexport const createAppointment = (appointment) => ({\r\n  type: types.createAppoiment,\r\n  payload: appointment,\r\n})\r\n\r\nexport const updateAppointment = (appointment) => ({\r\n  type: types.updateAppoiment,\r\n  payload: appointment,\r\n})\r\n","import React from 'react'\r\n\r\nimport MoreIcon from '@mui/icons-material/MoreVert'\r\nimport Grid from '@mui/material/Grid'\r\nimport Room from '@mui/icons-material/Room'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport { styled } from '@mui/material/styles'\r\nimport Phone from '@mui/icons-material/Phone'\r\nimport Description from '@mui/icons-material/Description'\r\n\r\nimport { AppointmentTooltip } from '@devexpress/dx-react-scheduler-material-ui'\r\nimport { Box } from '@mui/material'\r\n\r\nconst PREFIX = 'Demo'\r\nconst classes = {\r\n  icon: `${PREFIX}-icon`,\r\n  textCenter: `${PREFIX}-textCenter`,\r\n  firstRoom: `${PREFIX}-firstRoom`,\r\n  secondRoom: `${PREFIX}-secondRoom`,\r\n  thirdRoom: `${PREFIX}-thirdRoom`,\r\n  header: `${PREFIX}-header`,\r\n  commandButton: `${PREFIX}-commandButton`,\r\n}\r\n\r\nconst StyledIconButton = styled(IconButton)(() => ({\r\n  [`&.${classes.commandButton}`]: {\r\n    backgroundColor: 'rgba(255,255,255,0.65)',\r\n  },\r\n}))\r\n\r\nconst StyledGrid = styled(Grid)(() => ({\r\n  [`&.${classes.textCenter}`]: {\r\n    textAlign: 'center',\r\n  },\r\n}))\r\n\r\nconst StyledRoom = styled(Phone)(({ theme: { palette } }) => ({\r\n  [`&.${classes.icon}`]: {\r\n    color: palette.action.active,\r\n  },\r\n}))\r\n\r\nconst StyledDescription = styled(Description)(({ theme: { palette } }) => ({\r\n  [`&.${classes.icon}`]: {\r\n    color: palette.action.active,\r\n  },\r\n}))\r\n\r\nconst StyledAppointmentTooltipCommandButton = styled(AppointmentTooltip.CommandButton)(() => ({\r\n  [`&.${classes.commandButton}`]: {\r\n    backgroundColor: 'rgba(255,255,255,0.65)',\r\n  },\r\n}))\r\n\r\nexport const Content = ({ ...restProps }) => {\r\n  const { appointmentData } = restProps\r\n  return (\r\n    <AppointmentTooltip.Content {...restProps} appointmentData={appointmentData}>\r\n      <Grid container alignItems=\"center\">\r\n        <StyledGrid item xs={2} className={classes.textCenter}>\r\n          <StyledRoom className={classes.icon} />\r\n        </StyledGrid>\r\n        <Grid item xs={10}>\r\n          <span>{appointmentData.phone}</span>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <div style={{ float: 'left' }}> */}\r\n      <Grid container alignItems=\"center\" style={{ paddingTop: 5 }}>\r\n        <StyledGrid item xs={2} className={classes.textCenter}>\r\n          <StyledDescription className={classes.icon} />\r\n        </StyledGrid>\r\n        <Grid item xs={10}>\r\n          <span>{appointmentData.description}</span>\r\n        </Grid>\r\n      </Grid>\r\n      {/* </div> */}\r\n    </AppointmentTooltip.Content>\r\n  )\r\n}\r\n\r\nexport const CommandButton = ({ ...restProps }) => (\r\n  <StyledAppointmentTooltipCommandButton {...restProps} className={classes.commandButton} />\r\n)\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n  DialogTitle,\r\n  Dialog,\r\n  TextField,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nexport const AppointmentDialog = (props) => {\r\n  const { title, children, openPopup, setOpenPopup, setRecordForEdit } = props\r\n  const handleClose = (event, reason) => {\r\n    if ((reason && reason == 'backdropClick') || reason == 'escapeKeyDown') {\r\n      setRecordForEdit(null)\r\n      setOpenPopup(false)\r\n    }\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={openPopup}\r\n      style={{ padding: 2, position: 'absolute', top: 5 }}\r\n      onClose={handleClose}\r\n    >\r\n      <DialogTitle style={{ backgroundColor: 'rgba(88,183,244,0.8)' }}>\r\n        <div style={{ display: 'flex' }}>\r\n          <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1, color: 'white' }}>\r\n            {title}\r\n          </Typography>\r\n          <Button\r\n            // color=\"primary\"\r\n            style={{ fontSize: '15px', color: 'white' }}\r\n            onClick={() => {\r\n              setRecordForEdit(null)\r\n              setOpenPopup(false)\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n      </DialogTitle>\r\n      <DialogContent dividers>{children}</DialogContent>\r\n      {/* <DialogActions>\r\n        <Button onClick={() => setOpenPopup(false)}>Cancel</Button>\r\n      </DialogActions> */}\r\n    </Dialog>\r\n  )\r\n  //   return (\r\n  //     <Dialog open={open} onClose={handleClose}>\r\n  //       <form onSubmit={handleSubmit}>\r\n  //         <DialogTitle>Detalle cita</DialogTitle>\r\n  //         <DialogContent>\r\n  //           {/* <DialogContentText>\r\n  //             To subscribe to this website, please enter your email address here. We will send updates\r\n  //             occasionally.\r\n  //           </DialogContentText> */}\r\n  //           <TextField\r\n  //             autoFocus\r\n  //             margin=\"dense\"\r\n  //             name=\"description\"\r\n  //             label=\"Comentarios\"\r\n  //             fullWidth\r\n  //             variant=\"standard\"\r\n  //           />\r\n  //         </DialogContent>\r\n  //         {/* <DialogActions>\r\n  //         <Button onClick={handleClose}>Cancel</Button>\r\n  //         <Button type=\"submit\">Guardar</Button>\r\n  //       </DialogActions> */}\r\n  //       </form>\r\n  //     </Dialog>\r\n  //   )\r\n}\r\n","import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'\r\n\r\nimport {\r\n  Autocomplete,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material'\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment'\r\nimport { useForm } from 'src/layout/useForm'\r\n// import { useForm } from 'src/hooks/useForm'\r\n\r\nconst initialFValues = {\r\n  description: '',\r\n  status: 'Pendiente',\r\n  branchId: 0,\r\n  customerId: null,\r\n}\r\n\r\nexport const AppointmentFormC = (props) => {\r\n  const { recordForEdit, addOrEdit, cancelForm } = props\r\n  const customers = useSelector((state) => state.customers)\r\n  const branches = useSelector((state) => state.branches)\r\n  // const customersCombo = customers.map((e) => {\r\n  //   return {\r\n  //     label: `${e.name} ${e.lastname} - ${e.phone}`,\r\n  //     id: e.id,\r\n  //   }\r\n  // })\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    if ('customerId' in fieldValues)\r\n      temp.customerId = fieldValues.customerId ? '' : 'Este campo es requerido'\r\n    if ('branchId' in fieldValues)\r\n      temp.branchId = fieldValues.branchId != 0 ? '' : 'Este campo es requerido'\r\n\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '')\r\n  }\r\n  const { values, setValues, handleInputChange, resetForm, errors, setErrors } = useForm(\r\n    initialFValues,\r\n    true,\r\n    validate,\r\n  )\r\n  useEffect(() => {\r\n    if (recordForEdit != null) {\r\n      if (recordForEdit.id) setValues({ ...recordForEdit })\r\n      else setValues({ ...initialFValues, ...recordForEdit })\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (validate()) {\r\n      addOrEdit(values, resetForm)\r\n    }\r\n  }\r\n  const handleCancel = () => {\r\n    cancelForm(resetForm)\r\n  }\r\n\r\n  return (\r\n    <form className=\"row\" style={{ marginRight: 0, display: 'flex' }} onSubmit={handleSubmit}>\r\n      {/* // <Form> */}\r\n      <div className=\"col-12\">\r\n        <Autocomplete\r\n          disablePortal\r\n          isOptionEqualToValue={(option, value) => option.id === value.id}\r\n          id=\"combo-box-demo\"\r\n          options={recordForEdit?.id ? customers : customers.filter((e) => e.status)}\r\n          value={values.customerId}\r\n          onChange={(event, newValue) => {\r\n            handleInputChange({\r\n              target: {\r\n                name: 'customerId',\r\n                value: newValue,\r\n              },\r\n            })\r\n          }}\r\n          getOptionLabel={(option) => `${option.name} ${option.lastname} - ${option.phone}`}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Cliente\"\r\n              style={{ margin: 10 }}\r\n              variant=\"standard\"\r\n              error={errors.customerId ? true : false}\r\n              helperText={errors.customerId ? errors.customerId : ''}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n      <LocalizationProvider dateAdapter={AdapterMoment}>\r\n        <div className=\"col-md-6\">\r\n          <DateTimePicker\r\n            label=\"Fecha Inicio\"\r\n            name=\"startDate\"\r\n            value={values.startDate}\r\n            onChange={(value) => {\r\n              handleInputChange({\r\n                target: {\r\n                  name: 'startDate',\r\n                  value: value,\r\n                },\r\n              })\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                style={{ width: '100%', margin: 10 }}\r\n                variant=\"standard\"\r\n                // error={startDate}\r\n                // helperText={startDate ? 'Este campo es requerido' : ''}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <DateTimePicker\r\n            label=\"Fecha Fin\"\r\n            name=\"endDate\"\r\n            value={values.endDate}\r\n            onChange={(value) => {\r\n              handleInputChange({\r\n                target: {\r\n                  name: 'endDate',\r\n                  value: value,\r\n                },\r\n              })\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                style={{ margin: 10, width: '100%' }}\r\n                variant=\"standard\"\r\n                // error={endDate}\r\n                // helperText={endDate ? 'Este campo es requerido' : ''}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n      </LocalizationProvider>\r\n\r\n      <div className=\"col-12\">\r\n        <TextField\r\n          id=\"standard-multiline-static\"\r\n          label=\"Comentarios\"\r\n          variant=\"standard\"\r\n          multiline\r\n          rows={4}\r\n          name=\"description\"\r\n          value={values.description}\r\n          onChange={handleInputChange}\r\n          style={{ margin: 10, width: '100%' }}\r\n        />\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <FormControl sx={{ m: 1, minWidth: '100%' }} variant=\"standard\">\r\n          <InputLabel id=\"demo-select-small\">Estatus</InputLabel>\r\n          <Select\r\n            labelId=\"demo-select-small\"\r\n            id=\"demo-select-small\"\r\n            name=\"status\"\r\n            value={values.status}\r\n            label=\"Estatus\"\r\n            onChange={handleInputChange}\r\n          >\r\n            <MenuItem value=\"Pendiente\">Pendiente</MenuItem>\r\n            <MenuItem value=\"Confirmada\">Confirmada</MenuItem>\r\n            <MenuItem value=\"Cancelada\">Cancelada</MenuItem>\r\n            <MenuItem value=\"Realizada\">Realizada</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"col-12\">\r\n        <FormControl\r\n          sx={{ m: 1, minWidth: '100%' }}\r\n          variant=\"standard\"\r\n          error={errors.branchId ? true : false}\r\n        >\r\n          <InputLabel id=\"select-branch\">Sucursal</InputLabel>\r\n          <Select\r\n            labelId=\"select-branch\"\r\n            id=\"select-branch\"\r\n            name=\"branchId\"\r\n            value={values.branchId}\r\n            label=\"Sucursal\"\r\n            onChange={handleInputChange}\r\n            MenuProps={{ PaperProps: { sx: { maxHeight: 400 } } }}\r\n          >\r\n            <MenuItem value={0}>Ninguna</MenuItem>\r\n            {(recordForEdit?.id ? branches : branches.filter((e) => e.status)).map((e) => {\r\n              return (\r\n                <MenuItem key={e.id} value={e.id}>\r\n                  {e.id} {e.name} - {e.city}\r\n                </MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n          {errors.branchId ? (\r\n            <FormHelperText error={errors.branchId ? true : false}>\r\n              {errors.branchId}\r\n            </FormHelperText>\r\n          ) : null}\r\n        </FormControl>\r\n      </div>\r\n      <div className=\"col-12\" style={{ textAlignLast: 'end', paddingTop: 10 }}>\r\n        <Button\r\n          size=\"large\"\r\n          style={{ textTransform: 'none', margin: 1, color: 'rgba(88,183,244,0.8)' }}\r\n          onClick={handleCancel}\r\n        >\r\n          Cancelar\r\n        </Button>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          style={{ textTransform: 'none', margin: 1, backgroundColor: 'rgba(88,183,244,0.8)' }}\r\n        >\r\n          Guardar\r\n        </Button>\r\n      </div>\r\n\r\n      {/* </Form> */}\r\n    </form>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport Paper from '@mui/material/Paper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ViewState } from '@devexpress/dx-react-scheduler'\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  Toolbar,\r\n  ViewSwitcher,\r\n  MonthView,\r\n  DayView,\r\n  DateNavigator,\r\n  TodayButton,\r\n  AppointmentTooltip,\r\n} from '@devexpress/dx-react-scheduler-material-ui'\r\nimport { addAppointmentAPI, getAllAppoiments, updateAppointmentAPI } from 'src/actions/appoiments'\r\n\r\nimport { Content, CommandButton } from './AppointmentToolTip'\r\nimport moment from 'moment'\r\nimport { getAllCustomers } from 'src/actions/customers'\r\nimport { getAllBranches } from 'src/actions/branches'\r\nimport { Fab } from '@mui/material'\r\nimport { styled } from '@mui/material/styles'\r\nimport { AppointmentDialog } from './AppointmentDialog'\r\nimport { AppointmentFormC } from './AppointmentFormC'\r\nimport { Spinner } from 'src/views/utils/Spinner'\r\nimport { PaperHeader } from 'src/views/utils/PaperHeader'\r\n// import { AppointmentDialog } from './AppointmentDialog'\r\n\r\nconst PREFIX = 'Demo'\r\nconst classes = {\r\n  addButton: `${PREFIX}-addButton`,\r\n}\r\n\r\nconst StyledFab = styled(Fab)(({ theme }) => ({\r\n  [`&.${classes.addButton}`]: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(10),\r\n    right: theme.spacing(4),\r\n  },\r\n}))\r\n\r\nconst Calendar = () => {\r\n  const dispatch = useDispatch()\r\n  const appoiments = useSelector((state) => state.appoiments)\r\n  const customers = useSelector((state) => state.customers)\r\n  const branches = useSelector((state) => state.branches)\r\n\r\n  // const form = useSelector((state) => state.calendarForm.form)\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n  const [currentView, setCurrentView] = useState('work-week')\r\n  const currentViewNameChange = (currentViewName) => {\r\n    setCurrentView(currentViewName)\r\n  }\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n\r\n  useEffect(() => {\r\n    appoiments.length === 0 && dispatch(getAllAppoiments())\r\n    customers.length === 0 && dispatch(getAllCustomers())\r\n    branches.length === 0 && dispatch(getAllBranches())\r\n\r\n    // dispatch(getAllAppoiments())\r\n    // dispatch(getAllCustomers())\r\n    // dispatch(getAllBranches())\r\n  }, [])\r\n\r\n  const timeDayTableCellComponent = ({ ...restProps }) => {\r\n    const { startDate, endDate } = restProps\r\n    return (\r\n      <DayView.TimeTableCell\r\n        {...restProps}\r\n        onDoubleClick={() => openInDialog({ startDate, endDate })}\r\n      />\r\n    )\r\n  }\r\n  const timeWeekTableCellComponent = ({ ...restProps }) => {\r\n    const { startDate, endDate } = restProps\r\n    return (\r\n      <WeekView.TimeTableCell\r\n        {...restProps}\r\n        onDoubleClick={() => openInDialog({ startDate, endDate })}\r\n      />\r\n    )\r\n  }\r\n\r\n  const timeMonthTableCellComponent = ({ ...restProps }) => {\r\n    const { startDate, endDate } = restProps\r\n    return (\r\n      <MonthView.TimeTableCell\r\n        {...restProps}\r\n        onDoubleClick={() => openInDialog({ startDate, endDate })}\r\n      />\r\n    )\r\n  }\r\n\r\n  const Appointment = ({ ...restProps }) => {\r\n    const { status } = restProps.data\r\n    return (\r\n      <Appointments.Appointment\r\n        {...restProps}\r\n        // onDoubleClick={() => {\r\n        //   console.log('header')\r\n        //   openInDialog(restProps.data)\r\n        // }}\r\n        // onClick={(e) => {\r\n        //   console.log(e)\r\n        // }}\r\n        style={\r\n          status === 'Cancelada'\r\n            ? {\r\n                backgroundColor: '#F73208',\r\n                borderRadius: '8px',\r\n              }\r\n            : status === 'Pendiente'\r\n            ? {\r\n                backgroundColor: '#FFC102',\r\n                borderRadius: '8px',\r\n              }\r\n            : status === 'Confirmada'\r\n            ? {\r\n                backgroundColor: '#14B6CA',\r\n                borderRadius: '8px',\r\n              }\r\n            : {\r\n                backgroundColor: '#10C53C',\r\n                borderRadius: '8px',\r\n              }\r\n        }\r\n      ></Appointments.Appointment>\r\n    )\r\n  }\r\n\r\n  const Header = ({ ...restProps }) => {\r\n    return (\r\n      <AppointmentTooltip.Header\r\n        {...restProps}\r\n        appointmentData={restProps.appointmentData}\r\n        onOpenButtonClick={() => {\r\n          openInDialog(restProps.appointmentData)\r\n        }}\r\n      ></AppointmentTooltip.Header>\r\n    )\r\n  }\r\n\r\n  const openInDialog = (item) => {\r\n    setRecordForEdit(item)\r\n    setOpenPopup(true)\r\n  }\r\n\r\n  const addOrEdit = (data, resetForm) => {\r\n    const duration = moment(data.endDate).diff(moment(data.startDate), 'minutes')\r\n    const appointment = {\r\n      branchId: data.branchId,\r\n      appoiment_date: data.startDate,\r\n      status: data.status,\r\n      description: data.description,\r\n      customerId: data.customerId.id,\r\n      duration: duration,\r\n    }\r\n    !data.id\r\n      ? dispatch(addAppointmentAPI(appointment))\r\n      : dispatch(updateAppointmentAPI(appointment, data.id))\r\n\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  const cancelForm = (resetForm) => {\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n    resetForm()\r\n  }\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        {appoiments.length > 0 ? (\r\n          <Paper>\r\n            <PaperHeader title=\"Calendario\" />\r\n            <Scheduler data={appoiments} locale={'es'}>\r\n              <ViewState\r\n                defaultCurrentDate={Date.now()}\r\n                currentViewName={currentView}\r\n                onCurrentViewNameChange={currentViewNameChange}\r\n              />\r\n              <WeekView\r\n                startDayHour={10}\r\n                endDayHour={19}\r\n                displayName=\"Semana\"\r\n                cell\r\n                timeTableCellComponent={timeWeekTableCellComponent}\r\n              />\r\n              <WeekView\r\n                name=\"work-week\"\r\n                displayName=\"Semana Laboral\"\r\n                excludedDays={[0, 6]}\r\n                startDayHour={9}\r\n                endDayHour={19}\r\n                timeTableCellComponent={timeWeekTableCellComponent}\r\n              />\r\n              {/* <WeekView. style={{ height: 50 }} /> */}\r\n              <MonthView displayName=\"Mes\" timeTableCellComponent={timeMonthTableCellComponent} />\r\n              <DayView displayName=\"Dia\" timeTableCellComponent={timeDayTableCellComponent} />\r\n              <Toolbar />\r\n              <DateNavigator />\r\n              <TodayButton messages={{ today: 'Hoy' }} />\r\n              <ViewSwitcher />\r\n              {/* <EditingState onCommitChanges={commitChanges} /> */}\r\n\r\n              {/* <IntegratedEditing /> */}\r\n              <Appointments appointmentComponent={Appointment} />\r\n\r\n              <AppointmentTooltip\r\n                showOpenButton\r\n                headerComponent={Header}\r\n                contentComponent={Content}\r\n                commandButtonComponent={CommandButton}\r\n                showCloseButton\r\n              />\r\n            </Scheduler>\r\n            <AppointmentDialog\r\n              openPopup={openPopup}\r\n              setOpenPopup={setOpenPopup}\r\n              setRecordForEdit={setRecordForEdit}\r\n              title=\"Cita\"\r\n            >\r\n              <AppointmentFormC\r\n                recordForEdit={recordForEdit}\r\n                addOrEdit={addOrEdit}\r\n                cancelForm={cancelForm}\r\n              />\r\n            </AppointmentDialog>\r\n          </Paper>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n\r\n        {/* <StyledFab\r\n        color=\"secondary\"\r\n        className={classes.addButton}\r\n        onClick={() => {\r\n          console.log('AGREGAR NUEVA CITA DESDE BOTON')\r\n        }}\r\n      >\r\n        <AddIcon />\r\n      </StyledFab> */}\r\n      </>\r\n    ),\r\n    [appoiments, Appointment],\r\n  )\r\n}\r\n\r\nexport default Calendar\r\n","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport const PaperHeader = (props) => {\r\n  const { title } = props\r\n  return (\r\n    // <h2\r\n    //   style={{\r\n    //     textAlign: 'left',\r\n    //     paddingLeft: 15,\r\n    //     color: '#fff',\r\n    //     lineHeight: '1.4',\r\n    //     backgroundColor: 'rgba(88,183,244,0.8)',\r\n    //     borderRadius: 5,\r\n    //     border: '5',\r\n    //     fontFamily: 'initial',\r\n    //   }}\r\n    // >\r\n    //   {title}\r\n    // </h2>\r\n    <Typography\r\n      variant=\"h4\"\r\n      style={{\r\n        textAlign: 'left',\r\n        paddingLeft: 15,\r\n        color: '#fff',\r\n        lineHeight: '1.4',\r\n        backgroundColor: '#36A3EA',\r\n        borderRadius: 5,\r\n        border: '5',\r\n        fontWeight: 'bold',\r\n      }}\r\n      fontFamily=\"Roboto\"\r\n    >\r\n      {title}\r\n    </Typography>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["getAllBranches","dispatch","axios","process","then","response","console","log","getBranches","data","catch","error","addBranchAPI","branch","createBranch","updateBranchAPI","id","updateBranch","type","types","payload","branches","getAllCustomers","getCustomers","addCustomerAPI","customer","createCustomer","updateCustomerAPI","updateCustomer","customers","useForm","initialFValues","validateOnChange","validate","useState","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","resetForm","useStyles","makeStyles","theme","root","width","marginTop","spacing","marginBottom","Form","props","classes","children","other","className","getAllAppoiments","appoiments","map","fecha","moment","appoiment_date","add","duration","startDate","Date","endDate","title","lastname","status","phone","email","description","customerId","branchId","getAppoiments","PREFIX","icon","textCenter","firstRoom","secondRoom","thirdRoom","header","commandButton","StyledGrid","styled","IconButton","backgroundColor","Grid","textAlign","StyledRoom","Phone","palette","color","action","active","StyledDescription","Description","StyledAppointmentTooltipCommandButton","AppointmentTooltip","Content","restProps","appointmentData","container","alignItems","item","xs","style","paddingTop","CommandButton","AppointmentDialog","openPopup","setOpenPopup","setRecordForEdit","Dialog","open","padding","position","top","onClose","event","reason","DialogTitle","display","Typography","variant","component","flexGrow","Button","fontSize","onClick","Close","DialogContent","dividers","AppointmentFormC","recordForEdit","addOrEdit","cancelForm","useSelector","state","fieldValues","temp","Object","every","x","useEffect","marginRight","onSubmit","preventDefault","Autocomplete","disablePortal","isOptionEqualToValue","option","options","filter","onChange","newValue","getOptionLabel","renderInput","params","TextField","label","margin","helperText","LocalizationProvider","dateAdapter","AdapterMoment","DateTimePicker","multiline","rows","FormControl","sx","m","minWidth","InputLabel","Select","labelId","MenuItem","MenuProps","PaperProps","maxHeight","city","FormHelperText","textAlignLast","size","textTransform","addButton","Fab","bottom","right","useDispatch","currentView","setCurrentView","currentViewNameChange","currentViewName","length","timeDayTableCellComponent","onDoubleClick","openInDialog","timeWeekTableCellComponent","timeMonthTableCellComponent","Appointment","borderRadius","Header","onOpenButtonClick","diff","appointment","updateAppointmentAPI","addAppointmentAPI","useMemo","Paper","PaperHeader","locale","defaultCurrentDate","now","onCurrentViewNameChange","startDayHour","endDayHour","displayName","cell","timeTableCellComponent","excludedDays","messages","today","appointmentComponent","showOpenButton","headerComponent","contentComponent","commandButtonComponent","showCloseButton","Spinner","paddingLeft","lineHeight","border","fontWeight","fontFamily"],"sourceRoot":""}