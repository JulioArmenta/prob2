{"version":3,"file":"static/js/566.1bb6cecd.chunk.js","mappings":"+TAIaA,EAAiB,WAC5B,OAAO,SAACC,GACNC,IAAAA,IAAA,UACUC,2CADV,kBAEGC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZJ,EAASO,EAAYH,EAASI,UAE/BC,OAAM,SAACC,GACNL,QAAQC,IAAII,QAKPC,EAAe,SAACC,GAC3B,gDAAO,WAAOZ,GAAP,sFACCC,IAAAA,KAAA,UACKC,2CADL,iBACwDU,GAC3DT,MAAK,SAACC,GACLJ,EAASa,EAAaT,EAASI,UAEhCC,OAAM,SAACC,GACNL,QAAQC,IAAII,MAPX,2CAAP,uDAYWI,EAAkB,SAACF,EAAQG,GACtC,gDAAO,WAAOf,GAAP,sFACCC,IAAAA,IAAA,UACIC,2CADJ,yBACuDa,GAAMH,GAChET,MAAK,SAACC,GACLJ,EAASgB,EAAaJ,OAEvBH,OAAM,SAACC,GACNL,QAAQC,IAAII,MAPX,2CAAP,uDAYWG,EAAe,SAACD,GAAD,MAAa,CACvCK,KAAMC,EAAAA,EAAAA,aACNC,QAASP,IAGEI,EAAe,SAACJ,GAAD,MAAa,CACvCK,KAAMC,EAAAA,EAAAA,aACNC,QAASP,IAGEL,EAAc,SAACa,GAAD,MAAe,CACxCH,KAAMC,EAAAA,EAAAA,YACNC,QAASC,K,2KCrDEC,EAAiB,WAC5B,OAAO,SAACrB,GACNC,IAAAA,IAAA,UACUC,2CADV,kBAEGC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZJ,EAASsB,EAAYlB,EAASI,UAE/BC,OAAM,SAACC,GACNL,QAAQC,IAAII,QAKPa,EAAgB,SAACC,GAC5B,gDAAO,WAAOxB,GAAP,sFACCC,IAAAA,KAAA,UACKC,2CADL,iBACwDsB,GAC3DrB,MAAK,SAACC,GACLJ,EAASyB,EAAcrB,EAASI,UAEjCC,OAAM,SAACC,GACNL,QAAQC,IAAII,MAPX,2CAAP,uDAYWgB,EAAmB,SAACF,EAAST,GACxC,gDAAO,WAAOf,GAAP,sFACCC,IAAAA,IAAA,UACIC,2CADJ,yBACuDa,GAAMS,GAChErB,MAAK,SAACC,GACLJ,EAAS2B,EAAcH,OAExBf,OAAM,SAACC,GACNL,QAAQC,IAAII,MAPX,2CAAP,uDAYWe,EAAgB,SAACD,GAAD,MAAc,CACzCP,KAAMC,EAAAA,EAAAA,cACNC,QAASK,IAGEG,EAAgB,SAACH,GAAD,MAAc,CACzCP,KAAMC,EAAAA,EAAAA,cACNC,QAASK,IAGEF,EAAc,SAACE,GAAD,MAAc,CACvCP,KAAMC,EAAAA,EAAAA,YACNC,QAASK,K,gKCtDEI,EAAkB,WAC7B,OAAO,SAAC5B,GACNC,IAAAA,IAAA,UACUC,2CADV,mBAEGC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GAEZJ,EAAS6B,EAAazB,EAASI,UAEhCC,OAAM,SAACC,GACNL,QAAQC,IAAII,QAKPoB,EAAiB,SAACC,GAC7B,gDAAO,WAAO/B,GAAP,sFACCC,IAAAA,KAAA,UACKC,2CADL,kBACyD6B,GAC5D5B,MAAK,SAACC,GACLJ,EAASgC,EAAe5B,EAASI,UAElCC,OAAM,SAACC,GACNL,QAAQC,IAAII,MAPX,2CAAP,uDAYWuB,EAAoB,SAACF,EAAUhB,GAC1C,gDAAO,WAAOf,GAAP,sFACCC,IAAAA,IAAA,UACIC,2CADJ,0BACwDa,GAAMgB,GACjE5B,MAAK,SAACC,GACLJ,EAASkC,EAAeH,OAEzBtB,OAAM,SAACC,GACNL,QAAQC,IAAII,MAPX,2CAAP,uDAYWsB,EAAiB,SAACD,GAAD,MAAe,CAC3Cd,KAAMC,EAAAA,EAAAA,eACNC,QAASY,IAGEG,EAAiB,SAACH,GAAD,MAAe,CAC3Cd,KAAMC,EAAAA,EAAAA,eACNC,QAASY,IAGEF,EAAe,SAACM,GAAD,MAAgB,CAC1ClB,KAAMC,EAAAA,EAAAA,aACNC,QAASgB,K,oNC/CLC,EAAiB,CACrBrB,GAAI,EACJsB,KAAM,GACNC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,eAAgB,GAChBC,WAAY,GACZC,SAAU,GACVC,kBAAmB,GACnBC,WAAY,IAGDC,EAAc,SAACC,GAC1B,IAAQC,EAAyCD,EAAzCC,cAAeC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,WAE5B9B,GAAW+B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMhC,YACxCe,GAAYgB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMjB,aACzCkB,GAAoBF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,qBAEvD,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4DC,EAAAA,EAAAA,GAAWrB,GAA/DsB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,kBAAmBC,EAA9C,EAA8CA,WAE9CC,EAAAA,EAAAA,YAAU,WACa,MAAjBd,IACEA,EAAcjC,IAChB4C,GAAU,UAAKX,IACyB,IAApCA,EAAcJ,mBAAyBY,GAAe,IACrDA,GAAe,MAEvB,CAACR,IAmBJ,OACE,SAAC,IAAD,CAAMe,SAlBa,SAACC,GACpBA,EAAEC,iBACFhB,EAAUS,EAAQG,IAgBlB,UACE,UAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,UAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAACC,EAAA,YAAD,CACEC,MAAM,SACNpC,KAAK,OACLqC,MAAOhB,EAAOrB,KACdsC,SAAUf,EACVgB,UAAQ,KAEV,SAACJ,EAAA,YAAD,CACEC,MAAM,iBACNpC,KAAK,cACLqC,MAAOhB,EAAOpB,YACdqC,SAAUf,EACVgB,UAAQ,KAEV,SAACJ,EAAA,aAAD,CACEnC,KAAK,oBACLoC,MAAM,qBACNC,MAAOhB,EAAOd,kBACd+B,SA9B0B,SAACX,GACnCJ,EAAkBI,GACK,IAAnBA,EAAEa,OAAOH,MAAalB,GAAe,GACpCA,GAAe,IA4BZsB,MACe,OAAb9B,QAAa,IAAbA,GAAAA,EAAejC,GAAKsC,EAAoBA,EAAkB0B,QAAO,SAACf,GAAD,OAAOA,EAAEgB,UAE5EJ,UAAQ,KAEV,UAACV,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,UACE,SAACC,EAAA,YAAD,CACEC,MAAM,eACNpC,KAAK,gBACLqC,MAAOhB,EAAOlB,eAAiB,GAC/BmC,SAAUf,EACV3C,KAAK,SACL2D,SAAUrB,OAGd,SAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,UACE,SAACC,EAAA,YAAD,CACEC,MAAM,eACNpC,KAAK,gBACLqC,MAAOhB,EAAOnB,eAAiB,GAC/BoC,SAAUf,EACV3C,KAAK,SACL2D,SAAUrB,aAKlB,UAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,WACE,SAACC,EAAA,aAAD,CACEnC,KAAK,WACLoC,MAAM,WACNC,MAAOhB,EAAOf,SACdgC,SAAUf,EACVkB,MAAoB,OAAb9B,QAAa,IAAbA,GAAAA,EAAejC,GAAKK,EAAWA,EAAS2D,QAAO,SAACf,GAAD,OAAOA,EAAEgB,UAC/DJ,UAAQ,KAEV,SAACJ,EAAA,aAAD,CACEnC,KAAK,aACLoC,MAAM,YACNC,MAAOhB,EAAOb,YAAc,GAC5B8B,SAAUf,EACVkB,MAAoB,OAAb9B,QAAa,IAAbA,GAAAA,EAAejC,GAAKoB,EAAYA,EAAU4C,QAAO,SAACf,GAAD,OAAOA,EAAEgB,UACjEJ,SAAUrB,KAEZ,SAACiB,EAAA,YAAD,CACEC,MAAM,mBACNpC,KAAK,iBACLqC,MAAOhB,EAAOjB,gBAAkB,GAChCkC,SAAUf,EACV3C,KAAK,SACL2D,SAAUrB,KAEZ,SAACiB,EAAA,YAAD,CACEC,MAAM,kBACNpC,KAAK,aACLqC,MAAOhB,EAAOhB,WACdiC,SAAUf,EACV3C,KAAK,SACL2D,UAAQ,QAGZ,UAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIW,MAAO,CAAEC,UAAW,QAASC,WAAY,GAA5D,WACE,SAACX,EAAA,aAAD,CACEY,QAAQ,OACRC,MAAM,UACNC,KAAK,QACLC,KAAK,WACLC,QA9FW,WACnBtC,EAAWW,OA+FL,SAACW,EAAA,aAAD,CACEY,QAAQ,YACRC,MAAM,UACNpE,KAAK,SACLqE,KAAK,QACLC,KAAK,qB,2OCPjB,EA3HqB,SAACxC,GACpB,IAAM0C,EAAW,CACf,CACEC,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMC,EAAAA,EAAYH,MAAM,WAC1CI,MAAO,QAET,CACEJ,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMG,EAAAA,EAAiBL,MAAM,mBAC/CI,MAAO,eAMT,CACEJ,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMI,EAAAA,EAAgBN,MAAM,iBAC9CI,MAAO,gBACPG,OAAQ,SAACC,GAAD,OAAaA,EAAQ1D,eAAiB,MAEhD,CACEkD,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMI,EAAAA,EAAgBN,MAAM,iBAC9CI,MAAO,gBACPG,OAAQ,SAACC,GAAD,OAAaA,EAAQ3D,eAAiB,MAEhD,CACEmD,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMO,EAAAA,EAAiBT,MAAM,qBAC/CI,MAAO,iBACP7E,KAAM,YAER,CACEyE,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMO,EAAAA,EAAiBT,MAAM,oBAC/CI,MAAO,aACP7E,KAAM,YAQR,CACEyE,OAAO,SAACC,EAAA,EAAD,CAAWC,KAAMQ,EAAAA,EAAmBV,MAAM,sBACjDI,MAAO,YACP7E,KAAM,OACNoF,YAAa,OACbJ,OAAQ,SAACC,GAAD,OAAaI,IAAOJ,EAAQK,WAAWC,OAAO,iBAoBlDC,EAAmC1D,EAAnC0D,aAAcC,EAAqB3D,EAArB2D,iBAEhB1G,GAAW2G,EAAAA,EAAAA,MACXC,GAAWzD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMwD,YACxCxF,GAAW+B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMhC,YACxCe,GAAYgB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMjB,aACzCkB,GAAoBF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,qBASvD,OAPAS,EAAAA,EAAAA,YAAU,WACY,IAApB8C,EAASC,QAAgB7G,GAASqB,EAAAA,EAAAA,OACd,IAApBD,EAASyF,QAAgB7G,GAASD,EAAAA,EAAAA,OACb,IAArBoC,EAAU0E,QAAgB7G,GAAS4B,EAAAA,EAAAA,OACN,IAA7ByB,EAAkBwD,QAAgB7G,GAAS8G,EAAAA,EAAAA,SAC1C,KAEIC,EAAAA,EAAAA,UACL,kBACE,8BACe,MAAZH,GAEC,iCACE,SAACI,EAAA,EAAD,CAAatB,MAAM,eACnB,SAAC,IAAD,CACEuB,aAAcC,EAAAA,EACdC,MAAOC,EAAAA,EACPC,QAAS5B,EACTjF,KAAMoG,EACNU,SAASC,EAAAA,EAAAA,GACP,kBACA7F,EAAAA,GACA+E,EACAC,EACA1G,GAEFwH,YAAYA,EAAAA,EAAAA,GAAWf,EAAcC,GACrCe,QAAS,CACPC,QAAQ,EACRC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,qBAAsB,OACtBC,oBAAqB,EACrBC,mBAAoB,WACpBC,iBAAkB,CAAEC,OAAQ,IAC5BC,YAAaA,EAAAA,EACbC,SAAUA,EAAAA,SAKhB,SAACC,EAAA,EAAD,QAIN,CAACzB,KCzIC0B,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXP,OAAQM,EAAMpE,QAAQ,GACtBsE,QAASF,EAAMpE,QAAQ,IAEzBuE,YAAa,CACXC,MAAO,WAoDX,EAhDiB,WACf,IAAM5I,GAAW2G,EAAAA,EAAAA,MACjB,GAAkCrD,EAAAA,EAAAA,WAAS,GAA3C,eAAOuF,EAAP,KAAkBpC,EAAlB,KACA,GAA0CnD,EAAAA,EAAAA,UAAS,MAAnD,eAAON,EAAP,KAAsB0D,EAAtB,KAsBMxD,GArBUoF,IAqBG,SAACzE,GAClB6C,EAAiB,MACjB7C,IACA4C,GAAa,KAGf,OACE,iCACE,SAACqC,EAAA,EAAD,WACE,SAAC,EAAD,CAAcrC,aAAcA,EAAcC,iBAAkBA,OAE9D,SAACqC,EAAA,EAAD,CACEF,UAAWA,EACXpC,aAAcA,EACdC,iBAAkBA,EAClBxD,WAAYA,EACZwC,MAAM,WALR,UAOE,SAAC5C,EAAD,CAAaE,cAAeA,EAAeC,UArC/B,SAACzB,EAASqC,GAC1BmF,OAAOC,KAAKzH,GAAS0H,SAAQ,SAAUC,GAChB,KAAjB3H,EAAQ2H,KACV3H,EAAQ2H,GAAO,SAGA,IAAf3H,EAAQT,WACHS,EAAQT,GACff,GAASuB,EAAAA,EAAAA,IAAcC,aAEhBA,EAAQ4H,UACfpJ,GAAS0B,EAAAA,EAAAA,IAAiBF,EAASA,EAAQT,MAG7C8C,IACA6C,EAAiB,MACjBD,GAAa,IAqBwDvD,WAAYA","sources":["actions/branches.js","actions/products.js","actions/providers.js","views/catalogs/products/ProductForm.js","views/catalogs/products/ProductsGrid.js","views/catalogs/products/Products.js"],"sourcesContent":["import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllBranches = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/branches`)\r\n      .then((response) => {\r\n        console.log(response)\r\n\r\n        dispatch(getBranches(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addBranchAPI = (branch) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/branches`, branch)\r\n      .then((response) => {\r\n        dispatch(createBranch(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateBranchAPI = (branch, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/branches/${id}`, branch)\r\n      .then((response) => {\r\n        dispatch(updateBranch(branch))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const createBranch = (branch) => ({\r\n  type: types.createBranch,\r\n  payload: branch,\r\n})\r\n\r\nexport const updateBranch = (branch) => ({\r\n  type: types.updateBranch,\r\n  payload: branch,\r\n})\r\n\r\nexport const getBranches = (branches) => ({\r\n  type: types.getBranches,\r\n  payload: branches,\r\n})\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllProducts = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/products`)\r\n      .then((response) => {\r\n        console.log(response)\r\n\r\n        dispatch(getProducts(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addProductAPI = (product) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/products`, product)\r\n      .then((response) => {\r\n        dispatch(createProduct(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateProductAPI = (product, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/products/${id}`, product)\r\n      .then((response) => {\r\n        dispatch(updateProduct(product))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const createProduct = (product) => ({\r\n  type: types.createProduct,\r\n  payload: product,\r\n})\r\n\r\nexport const updateProduct = (product) => ({\r\n  type: types.updateProduct,\r\n  payload: product,\r\n})\r\n\r\nexport const getProducts = (product) => ({\r\n  type: types.getProducts,\r\n  payload: product,\r\n})\r\n","import axios from 'axios'\r\nimport { types } from '../types/types'\r\n\r\nexport const getAllProviders = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_URL_BASE}/api/providers`)\r\n      .then((response) => {\r\n        console.log(response)\r\n\r\n        dispatch(getProviders(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addProviderAPI = (provider) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_URL_BASE}/api/providers`, provider)\r\n      .then((response) => {\r\n        dispatch(createProvider(response.data))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateProviderAPI = (provider, id) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .put(`${process.env.REACT_APP_API_URL_BASE}/api/providers/${id}`, provider)\r\n      .then((response) => {\r\n        dispatch(updateProvider(provider))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const createProvider = (provider) => ({\r\n  type: types.createProvider,\r\n  payload: provider,\r\n})\r\n\r\nexport const updateProvider = (provider) => ({\r\n  type: types.updateProvider,\r\n  payload: provider,\r\n})\r\n\r\nexport const getProviders = (providers) => ({\r\n  type: types.getProviders,\r\n  payload: providers,\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useForm as customForm, Form } from 'src/layout/useForm'\r\nimport Controls from 'src/views/utils/controls/Controls'\r\nimport { useSelector } from 'react-redux'\r\n// import { FormRadioGroup } from 'src/views/utils/controls/FormRadioGroup'\r\nimport InputMask from 'react-input-mask'\r\nimport { TextField } from '@mui/material'\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  name: '',\r\n  description: '',\r\n  minimum_stock: '',\r\n  current_stock: '',\r\n  purchase_price: '',\r\n  sale_price: '',\r\n  branchId: '',\r\n  productCategoryId: '',\r\n  providerId: '',\r\n}\r\n\r\nexport const ProductForm = (props) => {\r\n  const { recordForEdit, addOrEdit, cancelForm } = props\r\n\r\n  const branches = useSelector((state) => state.branches)\r\n  const providers = useSelector((state) => state.providers)\r\n  const productCategories = useSelector((state) => state.productCategories)\r\n\r\n  const [validations, setValidations] = useState(true)\r\n  const { values, setValues, handleInputChange, resetForm } = customForm(initialFValues)\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null) {\r\n      if (recordForEdit.id) {\r\n        setValues({ ...recordForEdit })\r\n        if (recordForEdit.productCategoryId !== 1) setValidations(false)\r\n      } else setValidations(true)\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    addOrEdit(values, resetForm)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    resetForm()\r\n  }\r\n\r\n  const handleProductCategoryChange = (e) => {\r\n    handleInputChange(e)\r\n    if (e.target.value !== 1) setValidations(false)\r\n    else setValidations(true)\r\n  }\r\n  const handleCancel = () => {\r\n    cancelForm(resetForm)\r\n  }\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Controls.FormInput\r\n            label=\"Nombre\"\r\n            name=\"name\"\r\n            value={values.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Descripción\"\r\n            name=\"description\"\r\n            value={values.description}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <Controls.FormSelect\r\n            name=\"productCategoryId\"\r\n            label=\"Categoria Producto\"\r\n            value={values.productCategoryId}\r\n            onChange={handleProductCategoryChange}\r\n            items={\r\n              recordForEdit?.id ? productCategories : productCategories.filter((e) => e.status)\r\n            }\r\n            required\r\n          />\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6} sm={6}>\r\n              <Controls.FormInput\r\n                label=\"Stock Actual\"\r\n                name=\"current_stock\"\r\n                value={values.current_stock || ''}\r\n                onChange={handleInputChange}\r\n                type=\"number\"\r\n                required={validations}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}>\r\n              <Controls.FormInput\r\n                label=\"Stock Minimo\"\r\n                name=\"minimum_stock\"\r\n                value={values.minimum_stock || ''}\r\n                onChange={handleInputChange}\r\n                type=\"number\"\r\n                required={validations}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Controls.FormSelect\r\n            name=\"branchId\"\r\n            label=\"Sucursal\"\r\n            value={values.branchId}\r\n            onChange={handleInputChange}\r\n            items={recordForEdit?.id ? branches : branches.filter((e) => e.status)}\r\n            required\r\n          />\r\n          <Controls.FormSelect\r\n            name=\"providerId\"\r\n            label=\"Proveedor\"\r\n            value={values.providerId || ''}\r\n            onChange={handleInputChange}\r\n            items={recordForEdit?.id ? providers : providers.filter((e) => e.status)}\r\n            required={validations}\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Precio de Compra\"\r\n            name=\"purchase_price\"\r\n            value={values.purchase_price || ''}\r\n            onChange={handleInputChange}\r\n            type=\"number\"\r\n            required={validations}\r\n          />\r\n          <Controls.FormInput\r\n            label=\"Precio de Venta\"\r\n            name=\"sale_price\"\r\n            value={values.sale_price}\r\n            onChange={handleInputChange}\r\n            type=\"number\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} style={{ textAlign: 'right', paddingTop: 5 }}>\r\n          <Controls.FormButton\r\n            variant=\"text\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            text=\"Cancelar\"\r\n            onClick={handleCancel}\r\n          />\r\n          <Controls.FormButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            text=\"Guardar\"\r\n          />\r\n          {/* <Controls.FormButton\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            text=\"Limpiar\"\r\n            onClick={handleReset}\r\n          /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport MaterialTable, { MTableAction, MTableBodyRow } from 'material-table'\r\n\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport DescriptionIcon from '@mui/icons-material/Description'\r\n\r\nimport { Spinner } from 'src/views/utils/Spinner'\r\nimport { PaperHeader } from 'src/views/utils/PaperHeader'\r\nimport { GridTitle } from 'src/views/utils/material-table/GridTitle'\r\nimport { GridAddButton } from 'src/views/utils/material-table/GridAddButton'\r\nimport { localizationConfig } from '../../utils/material-table/Localization'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllProducts, updateProductAPI } from 'src/actions/products'\r\nimport moment from 'moment'\r\nimport { tableIcons } from 'src/views/utils/material-table/GridIcons'\r\nimport { headerStyle } from 'src/views/utils/material-table/GridHeaderStyle'\r\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney'\r\nimport Inventory2Icon from '@mui/icons-material/Inventory2'\r\nimport { getAllBranches } from 'src/actions/branches'\r\nimport { getAllProviders } from 'src/actions/providers'\r\nimport { getAllProductCategories } from 'src/actions/productCategories'\r\nimport components from 'src/views/utils/material-table/GridComponents'\r\nimport ActionsTemplate from 'src/views/utils/material-table/GridActions'\r\nimport rowStyle from 'src/views/utils/material-table/GridRowStyle'\r\nconst ProductsGrid = (props) => {\r\n  const columnas = [\r\n    {\r\n      title: <GridTitle Icon={PersonIcon} title=\"Nombre\" />,\r\n      field: 'name',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={DescriptionIcon} title=\"Descripción\" />,\r\n      field: 'description',\r\n    },\r\n    // {\r\n    //   title: <GridTitle Icon={AttachMoneyIcon} title=\"Categoría Producto\" />,\r\n    //   field: 'product_category.name',\r\n    // },\r\n    {\r\n      title: <GridTitle Icon={Inventory2Icon} title=\"Stock Actual\" />,\r\n      field: 'current_stock',\r\n      render: (rowData) => rowData.current_stock || '-',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={Inventory2Icon} title=\"Stock Minimo\" />,\r\n      field: 'minimum_stock',\r\n      render: (rowData) => rowData.minimum_stock || '-',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={AttachMoneyIcon} title=\"Precio de Compra\" />,\r\n      field: 'purchase_price',\r\n      type: 'currency',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={AttachMoneyIcon} title=\"Precio de Venta\" />,\r\n      field: 'sale_price',\r\n      type: 'currency',\r\n    },\r\n\r\n    // {\r\n    //   title: <GridTitle Icon={CalendarMonthIcon} title=\"Edad\" />,\r\n    //   field: 'birth_date',\r\n    //   render: (rowData) => getfullYear(rowData.birth_date),\r\n    // },\r\n    {\r\n      title: <GridTitle Icon={CalendarTodayIcon} title=\"Fecha de registro\" />,\r\n      field: 'createdAt',\r\n      type: 'date',\r\n      defaultSort: 'desc',\r\n      render: (rowData) => moment(rowData.createdAt).format('DD/MM/YYYY'),\r\n    },\r\n  ]\r\n\r\n  const getfullYear = (birth_date) => {\r\n    if (birth_date != null) {\r\n      let hoy = new Date()\r\n      let fechaNacimiento = new Date(birth_date)\r\n      let edad = hoy.getFullYear() - fechaNacimiento.getFullYear()\r\n      let diferenciaMeses = hoy.getMonth() - fechaNacimiento.getMonth()\r\n      if (\r\n        diferenciaMeses < 0 ||\r\n        (diferenciaMeses === 0 && hoy.getDate() < fechaNacimiento.getDate())\r\n      ) {\r\n        edad--\r\n      }\r\n      return edad\r\n    } else return null\r\n  }\r\n\r\n  const { setOpenPopup, setRecordForEdit } = props\r\n\r\n  const dispatch = useDispatch()\r\n  const products = useSelector((state) => state.products)\r\n  const branches = useSelector((state) => state.branches)\r\n  const providers = useSelector((state) => state.providers)\r\n  const productCategories = useSelector((state) => state.productCategories)\r\n\r\n  useEffect(() => {\r\n    products.length === 0 && dispatch(getAllProducts())\r\n    branches.length === 0 && dispatch(getAllBranches())\r\n    providers.length === 0 && dispatch(getAllProviders())\r\n    productCategories.length === 0 && dispatch(getAllProductCategories())\r\n  }, [])\r\n\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        {products != null ? (\r\n          // <CCard>\r\n          <>\r\n            <PaperHeader title=\"Productos\" />\r\n            <MaterialTable\r\n              localization={localizationConfig}\r\n              icons={tableIcons}\r\n              columns={columnas}\r\n              data={products}\r\n              actions={ActionsTemplate(\r\n                'Editar Producto',\r\n                updateProductAPI,\r\n                setOpenPopup,\r\n                setRecordForEdit,\r\n                dispatch,\r\n              )}\r\n              components={components(setOpenPopup, setRecordForEdit)}\r\n              options={{\r\n                search: true,\r\n                draggable: false,\r\n                showTitle: false,\r\n                thirdSortClick: false,\r\n                searchFieldAlignment: 'left',\r\n                actionsColumnIndex: -1,\r\n                searchFieldVariant: 'outlined',\r\n                searchFieldStyle: { margin: 15 },\r\n                headerStyle: headerStyle,\r\n                rowStyle: rowStyle,\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </>\r\n    ),\r\n    [products],\r\n  )\r\n}\r\n\r\nexport default ProductsGrid\r\n","import { Paper, makeStyles } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addProductAPI, updateProductAPI } from 'src/actions/products'\r\nimport { PopupForm } from 'src/views/utils/controls/PopupForm'\r\nimport { ProductForm } from './ProductForm'\r\nimport ProductsGrid from './ProductsGrid'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(3),\r\n  },\r\n  searchInput: {\r\n    width: '75%',\r\n  },\r\n}))\r\n\r\nconst Products = () => {\r\n  const dispatch = useDispatch()\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const classes = useStyles()\r\n\r\n  const addOrEdit = (product, resetForm) => {\r\n    Object.keys(product).forEach(function (key) {\r\n      if (product[key] === '') {\r\n        product[key] = null\r\n      }\r\n    })\r\n    if (product.id === 0) {\r\n      delete product.id\r\n      dispatch(addProductAPI(product))\r\n    } else {\r\n      delete product.tableData\r\n      dispatch(updateProductAPI(product, product.id))\r\n    }\r\n\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  const cancelForm = (resetForm) => {\r\n    setRecordForEdit(null)\r\n    resetForm()\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <ProductsGrid setOpenPopup={setOpenPopup} setRecordForEdit={setRecordForEdit} />\r\n      </Paper>\r\n      <PopupForm\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n        setRecordForEdit={setRecordForEdit}\r\n        cancelForm={cancelForm}\r\n        title=\"Producto\"\r\n      >\r\n        <ProductForm recordForEdit={recordForEdit} addOrEdit={addOrEdit} cancelForm={cancelForm} />\r\n      </PopupForm>\r\n    </>\r\n  )\r\n}\r\nexport default Products\r\n"],"names":["getAllBranches","dispatch","axios","process","then","response","console","log","getBranches","data","catch","error","addBranchAPI","branch","createBranch","updateBranchAPI","id","updateBranch","type","types","payload","branches","getAllProducts","getProducts","addProductAPI","product","createProduct","updateProductAPI","updateProduct","getAllProviders","getProviders","addProviderAPI","provider","createProvider","updateProviderAPI","updateProvider","providers","initialFValues","name","description","minimum_stock","current_stock","purchase_price","sale_price","branchId","productCategoryId","providerId","ProductForm","props","recordForEdit","addOrEdit","cancelForm","useSelector","state","productCategories","useState","validations","setValidations","customForm","values","setValues","handleInputChange","resetForm","useEffect","onSubmit","e","preventDefault","Grid","container","spacing","item","xs","sm","Controls","label","value","onChange","required","target","items","filter","status","style","textAlign","paddingTop","variant","color","size","text","onClick","columnas","title","GridTitle","Icon","PersonIcon","field","DescriptionIcon","Inventory2Icon","render","rowData","AttachMoneyIcon","CalendarTodayIcon","defaultSort","moment","createdAt","format","setOpenPopup","setRecordForEdit","useDispatch","products","length","getAllProductCategories","useMemo","PaperHeader","localization","localizationConfig","icons","tableIcons","columns","actions","ActionsTemplate","components","options","search","draggable","showTitle","thirdSortClick","searchFieldAlignment","actionsColumnIndex","searchFieldVariant","searchFieldStyle","margin","headerStyle","rowStyle","Spinner","useStyles","makeStyles","theme","pageContent","padding","searchInput","width","openPopup","Paper","PopupForm","Object","keys","forEach","key","tableData"],"sourceRoot":""}