{"version":3,"file":"static/js/899.f1981164.chunk.js","mappings":"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","sources":["views/catalogs/products-categories/ProductCategoryForm.js","views/catalogs/products-categories/ProductCategoriesGrid.js","views/catalogs/products-categories/ProductsCategories.js","../node_modules/@mui/icons-material/Description.js","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { useForm as customForm, Form } from 'src/layout/useForm'\r\nimport Controls from 'src/views/utils/controls/Controls'\r\n\r\nconst initialFValues = {\r\n  id: 0,\r\n  name: '',\r\n  description: '',\r\n}\r\n\r\nexport const ProductCategoryForm = (props) => {\r\n  const { recordForEdit, addOrEdit, cancelForm } = props\r\n\r\n  const { values, setValues, handleInputChange, resetForm } = customForm(initialFValues)\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null) {\r\n      console.log(recordForEdit)\r\n      if (recordForEdit.id) setValues({ ...recordForEdit })\r\n    }\r\n  }, [recordForEdit])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    addOrEdit(values, resetForm)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    resetForm()\r\n  }\r\n  const handleCancel = () => {\r\n    cancelForm(resetForm)\r\n  }\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Controls.FormInput\r\n            label=\"Nombre\"\r\n            name=\"name\"\r\n            value={values.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <Controls.FormInput\r\n            label=\"DescripciÃ³n\"\r\n            name=\"description\"\r\n            value={values.description}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} style={{ textAlign: 'right', paddingTop: 5 }}>\r\n          <Controls.FormButton\r\n            variant=\"text\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            text=\"Cancelar\"\r\n            onClick={handleCancel}\r\n          />\r\n          <Controls.FormButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            text=\"Guardar\"\r\n          />\r\n          {/* <Controls.FormButton\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"large\"\r\n            text=\"Limpiar\"\r\n            onClick={handleReset}\r\n          /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport MaterialTable, { MTableAction, MTableBodyRow } from 'material-table'\r\n\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport DescriptionIcon from '@mui/icons-material/Description'\r\n\r\nimport { Spinner } from 'src/views/utils/Spinner'\r\nimport { PaperHeader } from 'src/views/utils/PaperHeader'\r\nimport { GridTitle } from 'src/views/utils/material-table/GridTitle'\r\nimport { GridAddButton } from 'src/views/utils/material-table/GridAddButton'\r\nimport { localizationConfig } from '../../utils/material-table/Localization'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { tableIcons } from 'src/views/utils/material-table/GridIcons'\r\nimport { headerStyle } from 'src/views/utils/material-table/GridHeaderStyle'\r\nimport { getAllProductCategories, updateProductCategoryAPI } from 'src/actions/productCategories'\r\nimport ActionsTemplate from 'src/views/utils/material-table/GridActions'\r\nimport components from 'src/views/utils/material-table/GridComponents'\r\nimport rowStyle from 'src/views/utils/material-table/GridRowStyle'\r\n\r\nconst CustomersGrid = (props) => {\r\n  const columnas = [\r\n    {\r\n      title: <GridTitle Icon={PersonIcon} title=\"Nombre\" />,\r\n      field: 'name',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={DescriptionIcon} title=\"Nombre Contacto\" />,\r\n      field: 'description',\r\n    },\r\n    {\r\n      title: <GridTitle Icon={CalendarTodayIcon} title=\"Fecha de registro\" />,\r\n      field: 'createdAt',\r\n      type: 'date',\r\n      defaultSort: 'desc',\r\n      render: (rowData) => moment(rowData.createdAt).format('DD/MM/YYYY'),\r\n    },\r\n  ]\r\n\r\n  const { setOpenPopup, setRecordForEdit } = props\r\n\r\n  const dispatch = useDispatch()\r\n  const productCategories = useSelector((state) => state.productCategories)\r\n\r\n  useEffect(() => {\r\n    if (productCategories.length === 0) {\r\n      dispatch(getAllProductCategories())\r\n    }\r\n  }, [])\r\n\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        {productCategories != null ? (\r\n          <>\r\n            <PaperHeader title=\"Categoria de Productos\" />\r\n            <MaterialTable\r\n              localization={localizationConfig}\r\n              icons={tableIcons}\r\n              columns={columnas}\r\n              data={productCategories}\r\n              actions={ActionsTemplate(\r\n                'Editar Categoria',\r\n                updateProductCategoryAPI,\r\n                setOpenPopup,\r\n                setRecordForEdit,\r\n                dispatch,\r\n              )}\r\n              components={components(setOpenPopup, setRecordForEdit)}\r\n              options={{\r\n                search: true,\r\n                draggable: false,\r\n                showTitle: false,\r\n                thirdSortClick: false,\r\n                searchFieldAlignment: 'left',\r\n                actionsColumnIndex: -1,\r\n                searchFieldVariant: 'outlined',\r\n                searchFieldStyle: { margin: 15 },\r\n                headerStyle: headerStyle,\r\n                rowStyle: rowStyle,\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </>\r\n    ),\r\n    [productCategories],\r\n  )\r\n}\r\n\r\nexport default CustomersGrid\r\n","import { Paper, makeStyles } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addProductCategoryAPI, updateProductCategoryAPI } from 'src/actions/productCategories'\r\nimport { PopupForm } from 'src/views/utils/controls/PopupForm'\r\nimport { ProductCategoryForm } from './ProductCategoryForm'\r\nimport ProductCategoriesGrid from './ProductCategoriesGrid'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageContent: {\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(3),\r\n  },\r\n  searchInput: {\r\n    width: '75%',\r\n  },\r\n}))\r\n\r\nconst ProductCategories = () => {\r\n  const dispatch = useDispatch()\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const classes = useStyles()\r\n\r\n  const addOrEdit = (productCategory, resetForm) => {\r\n    if (productCategory.id === 0) {\r\n      delete productCategory.id\r\n      dispatch(addProductCategoryAPI(productCategory))\r\n    } else {\r\n      delete productCategory.tableData\r\n      dispatch(updateProductCategoryAPI(productCategory, productCategory.id))\r\n    }\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  const cancelForm = (resetForm) => {\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper>\r\n        <ProductCategoriesGrid setOpenPopup={setOpenPopup} setRecordForEdit={setRecordForEdit} />\r\n      </Paper>\r\n      <PopupForm\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n        setRecordForEdit={setRecordForEdit}\r\n        title=\"Categoria Producto\"\r\n      >\r\n        <ProductCategoryForm\r\n          recordForEdit={recordForEdit}\r\n          addOrEdit={addOrEdit}\r\n          cancelForm={cancelForm}\r\n        />\r\n      </PopupForm>\r\n    </>\r\n  )\r\n}\r\nexport default ProductCategories\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'Description');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;"],"names":["initialFValues","id","name","description","ProductCategoryForm","props","recordForEdit","addOrEdit","cancelForm","customForm","values","setValues","handleInputChange","resetForm","useEffect","console","log","onSubmit","e","preventDefault","Grid","container","item","xs","Controls","label","value","onChange","required","style","textAlign","paddingTop","variant","color","size","text","onClick","type","columnas","title","GridTitle","Icon","PersonIcon","field","DescriptionIcon","CalendarTodayIcon","defaultSort","render","rowData","moment","createdAt","format","setOpenPopup","setRecordForEdit","dispatch","useDispatch","productCategories","useSelector","state","length","getAllProductCategories","useMemo","PaperHeader","localization","localizationConfig","icons","tableIcons","columns","data","actions","ActionsTemplate","updateProductCategoryAPI","components","options","search","draggable","showTitle","thirdSortClick","searchFieldAlignment","actionsColumnIndex","searchFieldVariant","searchFieldStyle","margin","headerStyle","rowStyle","Spinner","useStyles","makeStyles","theme","pageContent","spacing","padding","searchInput","width","useState","openPopup","Paper","ProductCategoriesGrid","PopupForm","productCategory","addProductCategoryAPI","tableData","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}